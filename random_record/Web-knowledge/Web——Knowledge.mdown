
https://github.com/FTChinese/ftc-header

**2017.12.20**
1.DOMContentLoaded是当DOM解析完以后触发，与onload事件相似，但onload要等到所有页面元素加载完成才会触发，包括页面上的图片等等。
如果页面上的图片很多时，onload触发时间需要更长，而在ajax运用中，常常需要在onload中加入许多初始化动作，如果因为网络问题，肯定会加载好慢，在这种情况下，使用DOMContentLoaded事件。
2.classList 属性返回元素的类名，作为 DOMTokenList 对象。
该属性用于在元素中添加，移除及切换 CSS 类。
classList 属性是只读的，但你可以使用 add() 和 remove() 方法修改它。
3.querySelector() 方法返回文档中匹配指定 CSS 选择器的一个元素。
4.instanceof 运算符用来检测 constructor.prototype 是否存在于参数 object 的原型链上
5.如果元素被指定的选择器字符串选择，Element.matches()  方法返回true; 否则返回false。
6.document.body是包含当前页面内容的元素,对于拥有<body>元素的文档来说,返回的是<body>元素,对于一个拥有<frameset>元素的文档来说,返回的是最外层的<frameset>元素.
7.HTMLElement 接口表示所有的 HTML 元素。一些HTML元素直接实现了HTMLElement接口，其它的间接实现HTMLElement接口.
HTMLSpanElement instanceof HTMLElement ====//false
8.insertAdajcentHTML(swhere,stext)
  where：插入位置。包括beforeBegin,beforeEnd,afterBegin,afterEnd。
  el：用于参照插入位置的html元素对象
  html：要插入的html代码
9.document.createEvent（）创建一个指定类型的事件。其返回的对象必须先初始化并可以被传递给 element.dispatchEvent。
Event接口表示在DOM中发生的任何事件; 一些是用户生成的（例如鼠标或键盘事件），而其他由API生成(例如指示动画已经完成运行的事件，视频已被暂停等等)。有许多类型的事件，其中一些使用基于主要事件接口的其他接口。事件本身包含所有事件通用的属性和方法。
// 创建事件
var event = document.createEvent('Event');
// 定义事件名为'build'.
event.initEvent('build', true, true);
// 监听事件
elem.addEventListener('build', function (e) {
  // e.target matches elem
}, false);
// 触发对象可以是任何元素或其他事件目标
elem.dispatchEvent(event);
dispatchEvent() 方法给节点分派一个合成事件。
10.Window.getComputedStyle() 方法给出应用活动样式表后的元素的所有CSS属性的值，并解析这些值可能包含的任何基本计算。返回的样式是一个实时的 CSSStyleDeclaration 对象，当元素的样式更改时，它会自动更新本身。
11.7.sass:加减乘除、颜色加减、变量、继承、字符运算、Mixins、@include、@import；
@if ($o-colors-is-silent == false) {}；
@each $usecase, $props in $o-colors-usecases {}；
还有函数：
unquote($string)：删除字符串中的引号；
quote($string)：给字符串添加引号。
percentage($value)：将一个不带单位的数转换成百分比值；
round($value)：将数值四舍五入，转换成一个最接近的整数；
ceil($value)：将大于自己的小数转换成下一位整数；
floor($value)：将一个数去除他的小数部分；
abs($value)：返回一个数的绝对值；
min($numbers…)：找出几个数值之间的最小值；
max($numbers…)：找出几个数值之间的最大值。
zip()函数将多个列表值转成一个多维的列表。
https://www.w3cplus.com/preprocessor/sass-other-function.html  ——sass函数

**2017.12.21**
package-lock.json是当 node_modules 或 package.json 发生变化时自动生成的文件。这个文件主要功能是确定当前安装的包的依赖，以便后续重新安装的时候生成相同的依赖，而忽略项目开发过程中有些依赖已经发生的更新。

/*jshint esversion: 6 */可以忽略以下提醒：
is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz)
 删除/*jshint esversion: 6 */可以解决以下错误：
 Incompatible values for the 'esversion' and 'esnext' linting options. (0% scanned).

//useref ：把html中零碎的引入合并，不负责代码压缩
// gulp.task('images', () => {
//   return gulp.src('app/images/**/*')
//     .pipe($.cache($.imagemin()))         //使用gulp-cache只压缩修改的图片，没有修改的图片直接从缓存文件读取
//     .pipe(gulp.dest('dist/images'));
// });

**2017.12.26**
no-referrer-when-downgrade:仅当发生协议降级（如 HTTPS 页面引入 HTTP 资源，从 HTTPS 页面跳到 HTTP 等）时不发送 Referrer 信息。这个规则是现在大部分浏览器默认所采用的；
https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Referrer-Policy

回流和重绘：
对于DOM结构中的各个元素都有自己的盒子模型，这些都需要浏览器根据各种样式（浏览器的、开发人员定义的等）
来计算并根据计算结果将元素放到它该出现的位置，这个过程称之为reflow。
当各种盒子的位置、大小以及其他属性，例如颜色、字体大小等都确定下来后，浏览器于是便把这些元素都按照各自的特性绘制了一遍，于是页面的内容出现了，这个过程称之为repaint。
触发reflow和repaint：
1.DOM元素的添加、修改、删除（reflow和repaint）。
2.仅修改DOM元素的字体颜色——只有repaint，因为不需要调整布局。
3.回流一定触发重绘，但是重绘不一定触发回流。
哪些会触发重绘：
1.改变字体
2.增加或者移除样式表。
3.内容变化，比如用户咋input框中输入文字
4.激活css伪类，比如：hover
5.脚本操作DOM
6.计算offsetWidth和offsetHeight属性
7.设置style属性的值
尽量避免以上7条，假如不能避免，尽量组合成一个操作再渲染在页面中。
在滚动过程中，页面中固定的会重绘，没有固定的不会重绘，不建议所有东西都浮动在页面上，因为可视区有限。


###CommonJS规范

http://javascript.ruanyifeng.com/nodejs/module.html

###requirejs

http://www.ruanyifeng.com/blog/2012/11/require_js.html

**2017.02.02**
sass的默认变量仅需要在值后面加上 !default即可。
sass的默认变量一般是用来设置默认值，然后根据需求来覆盖的，覆盖的方式也很简单，只需要在默认变量之前重新声明下变量即可
jquery中autocomplete插件
pop() 方法用于删除并返回数组的最后一个元素。
获取浏览器的名称与版本信息：jQuery 从 1.9 版开始，移除了 $.browser 和 $.browser.version ， 取而代之的是 $.support 。 
charCodeAt() 方法可返回指定位置的字符的 Unicode 编码。
http://www.jb51.net/article/48202.htm  JS判断字符串长度的5个方法（区分中文和英文）
◎Math.ceil()执行向上舍入，即它总是将数值向上舍入为最接近的整数；
◎Math.floor()执行向下舍入，即它总是将数值向下舍入为最接近的整数；
◎Math.round()执行标准舍入，即它总是将数值四舍五入为最接近的整数
jquery   append是追加，html是完全替换
对jQuery.prototype进得扩展，就是为jQuery类添加“成员函数”。Query.extend() 的调用并不会把方法扩展到对象的实例上，引用它的方法也需要通过jQuery类来实现，如jQuery.init()，而 jQuery.fn.extend()的调用把方法扩展到了对象的prototype上，所以实例化一个jQuery对象的时候，它就具有了这些方法。
$1 表示的是 第一个匹配到的对象；元素id可以没有引号
**2017.02.03**
forEach应用在数组，for in应用于对象
 >for (let i in obj) {  
    console.log("key:" + i + ", value:" + obj[i]);  }

    arr.forEach(function(item,index){
        console.log(item)
    });  







chrome内置JS调试器
https://developers.google.com/web/tools/chrome-devtools/javascript/

参见e:\FT\NEXT\app\scripts\main.js的// Lazy-load images
php include的js文件和外链的js文件有什么区别.md？

https://developers.google.com/speed/pagespeed/insights/   优化网页的利器
优化a.html之后
94分：首屏51.4 KiB的HTML 95分：首屏47.9 KiB的HTML 95分：首屏46.4 KiB的HTML



https://www.w3.org/TR/wai-aria/roles#aria-label    ：定义标签当前元素的字符串值
WAI-ARIA介绍博客？https://www.w3.org/TR/wai-aria/roles#navigation

信息安全：Md5算法

技术前沿网站积累：
1. 伯乐在线http://blog.jobbole.com/
2. 腾讯alloy team
http://www.alloyteam.com/

重定向触发额外的HTTP请求-响应周期和延迟页面渲染。在最好的情况下，每个重定向都会添加一个单独的往返(HTTP请求-响应)，在最坏的情况下，它可能会导致多个额外的往返，以执行DNS查找、TCP握手和TLS协商，以及附加的HTTP请求-响应周期。因此，您应该尽量减少使用重定向来提高站点性能。

gaUI界面用法：
1. 看PageView   BEHAVIOR->Site Content->All Pages
2. 
1. 《计算机程序设计艺术》系列
https://www.amazon.cn/dp/B00478TO44/ref=pd_luc_rh_sbs_02_01_t_img_lh?_encoding=UTF8&psc=1
共三本

https://github.com/fouber/blog/issues/3
https://github.com/fouber/blog/issues/4   前端工程与模块化框架.md

原文链接http://www.cnblogs.com/guwei4037/p/5591183.html


'process.env.NODE_ENV':获取node系统环境变量

contentWindow属性是指指定的frame或者iframe所在的window对象
在IE中iframe或者frame的contentWindow属性可以省略，但在Firefox中如果要对iframe对象进行编辑则必须指定contentWindow属性。
