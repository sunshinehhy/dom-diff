**2017.12.13**

使用默认模式在指定的线程上调用接收方方法。
perform(_:on:with:waitUntilDone:)
UTI：统一类型标识符
NSMutableDictionary
mmap将一个文件或者其它对象映射进内存。文件被映射到多个页上，如果文件的大小不是所有页的大小之和，最后一个页不被使用的空间将会清零。munmap执行相反的操作，删除特定地址区域的对象映射。
munmap()用来取消参数start 所指的映射内存起始地址，参数length 则是欲取消的内存大小。当进程结束或利用exec 相关函数来执行其他程序时，映射内存会自动解除，但关闭对应的文件描述词时不会解除映射。返回值：如果解除映射成功则返回0，否则返回－1。
kevent 是真正进行IO复用的函数。
pthread_setname_np()和pthread_getname_np()，可以在进程中设置和读取其他线程的名字。

## OpenGL ES:
GLuint  就是正整形呀

## Core Animation:
CADisplaylink 是一个计时器对象，可以使用这个对象来保持应用中的绘制与显示刷新的同步。更通俗的讲，电子显示屏都是由一个个像素点构成，要让屏幕显示的内容变化，需要以一定的频率刷新这些像素点的颜色值，系统会在每次刷新时触发 CADisplaylink。
CADisplaylink 与 NSTimer 非常类似，都可以以一定的时间间隔触发回调 selector，不同点在于 CADisplaylink 的时间间隔是与屏幕的刷新频率相关联的，这一点决定了 CADisplaylink 的应用多与显示有关。
CAEAGLLayer
https://www.kancloud.cn/manual/ios/97798  （核心动画高级技巧）
PCM：脉冲编码调制

## OC知识：

1. 给线程加锁的消耗是比较大的，而我们在IOS中不是经常会多个线程访问一个同一个变量,为了提高效率，我们通常会在属性中这样声明：
@property (nonatomic,copy)NSString *userName;

2. 前置加号（+）的方法为类方法，这类方法是可以直接用类名来调用的，它的作用主要是创建一个实例。有人把它称为创建实例的工厂方法。

3. 前置减号（-）的方法为实例方法，必须使用类的实例才可以调用的
4. protocal就相当于java中的interface；
5. 而interface和implementation共同代表一个类，两者的组合相当于java中的class，即oc中的类必须包括两部分，interface部分和implementation部分，这才是oc中的一个类的完整声明；然后OC中将成员变量和成员方法的声明部分放置在interface部分中，包括继承关系，protocal实现关系，都在interface里面的头部进行声明，然后将实现部分放置在implementation部分中，相当于是将类拆分成声明和实现两部分，这两部分缺一不可，所以在OC中，不妨不要将interface叫做接口，直接叫做类声明部分来得容易理解多了，简而言之，oc中interface是类的一个部分，和implementation共同组成一个完整的类。
6. 泛型：OC中的类型id，它可以认为是一种特殊的指针：可以指向任何类型的对象。id 再加上protocal（即oc中的接口），能够达到类似java中泛型的效果。
7. http://book.51cto.com/art/201105/262265.htm  （Category（类别））
8. nonatomic:普通的set get 方法通常情况下我们基本使用此关键字
  assain:非对象类型使用
  retain：任何对象类型都可以使用
  copy：只有遵守NSCopying的对象类型才可以使用（不遵守的对象类型会崩溃）
9. doesNotRecognizeSelector(_:)
10. exportAsynchronously(completionHandler:)
11. synchronized   这个主要是考虑多线程的程序，这个指令可以将{ } 内的代码限制在一个线程执行，如果某个线程没有执行完，其他的线程如果需要执行就得等着。
作用是创建一个互斥锁，保证此时没有其它线程对self对象进行修改。这个是objective-c的一个锁定令牌，防止self对象在同一时间内被其它线程访问，起到线程的保护作用。 一般在公用变量的时候使用，如单例模式或者操作类的static变量中使用。
12. munmap()用来取消参数start所指的映射内存起始地址，参数length则是欲取消的内存大小。当进程结束或利用exec相关函数来执行其他程序时，映射内存会自动解除，但关闭对应的文件描述符时不会解除映射。
13. lseek函数（随机访问文件）
使用UNIX系统调用来读取文件内容时，系统究竟是从文件的哪一个位置读取数据，完全由文件指针决定。例如：刚开始读取数据时，文件指针通常是指向文件的起始位置。
14. 刷新变化函数msync()
进程在映射空间的对共享内容的改变并不直接写回到磁盘文件中，往往在调用munmap()后才执行该操作。
可以通过调用msync()函数来实现磁盘文件内容与共享内存区中的内容一致,即同步操作.
15. instancetype类型：有一个关联的返回类型。id数据类型可以存储任何类型的对象，可以说，它是一般对象类型。
16. \__unsafe_unretained:和__weak 一样，唯一的区别便是，对象即使被销毁，指针也不会自动置空， 此时指针指向的是一个无用的野地址。如果使用此指针，程序会抛出 BAD_ACCESS 的异常。 

## Problem solved：

/Base.lproj/LaunchScreen.storyboard:6: Safe Area Layout Guide before iOS 9.0
需要增加版本

**2017.12.20**

round()：将值变成整数，四舍五入，负数也一样
比如：var z = -5.5 ；  z.round()；   // z == -6.0